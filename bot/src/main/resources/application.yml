app:
  telegram-token: ${TOKEN}
  scrapper-url: "http://localhost:8080"
  retry-policy:
    codes: 500
    backoff: constant
    limit: 3
    delay: 5000

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  kafka:
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
    bootstrapServers: localhost:29092

management:
  endpoints:
    web:
      base-path: /
      path-mapping:
        info: info
        health: health
        prometheus: metrics
      exposure:
        include: "health,info,prometheus"
    jmx:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    prometheus:
      enabled: true
  server:
    port: 8093
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui
